// app/(tabs)/index.tsx - Trang ch·ªß

import { Ionicons } from "@expo/vector-icons";
import { useState } from "react";
import React from "react";
import {
  Image,
  ScrollView,
  StyleSheet,
  Text,
  TextInput,
  TouchableOpacity,
  View,
  Modal
} from "react-native";
const suggestedJobs = [
  {
    id: 1,
    title: "Front End Developer (React.JS)",
    salary: "700 - 2,000 USD",
    company: "C√îNG TY C·ªî PH·∫¶N STRINGEE",
    location: "H√† N·ªôi",
    logo: require("../../../assets/images/Banner.jpg"),
    verified: true,
  "description": "Tham gia v√†o to√†n b·ªô qu√° tr√¨nh ph√°t tri·ªÉn c√°c ·ª©ng d·ª•ng web ph·ª©c t·∫°p, t·ª´ vi·ªác l√™n √Ω t∆∞·ªüng, thi·∫øt k·∫ø ƒë·∫øn tri·ªÉn khai v√† b·∫£o tr√¨. B·∫°n s·∫Ω:\n‚Ä¢ Ch·ªãu tr√°ch nhi·ªám ch√≠nh trong vi·ªác x√¢y d·ª±ng c√°c giao di·ªán ng∆∞·ªùi d√πng (UI) hi·ªáu qu·∫£ v√† ƒë·∫πp m·∫Øt.\n‚Ä¢ Vi·∫øt m√£ JavaScript, React.JS, HTML5 v√† CSS3 ch·∫•t l∆∞·ª£ng cao, c√≥ c·∫•u tr√∫c r√µ r√†ng v√† d·ªÖ b·∫£o tr√¨.\n‚Ä¢ Ph·ªëi h·ª£p ch·∫∑t ch·∫Ω v·ªõi c√°c th√†nh vi√™n trong ƒë·ªôi ng≈© Backend, UI/UX Designer v√† QA ƒë·ªÉ ƒë·∫£m b·∫£o s·∫£n ph·∫©m ƒë∆∞·ª£c ho√†n thi·ªán m·ªôt c√°ch tr∆°n tru.\n‚Ä¢ Lu√¥n c·∫≠p nh·∫≠t v√† nghi√™n c·ª©u c√°c c√¥ng ngh·ªá, framework, v√† th∆∞ vi·ªán m·ªõi nh·∫•t trong h·ªá sinh th√°i React.\n‚Ä¢ T·ªëi ∆∞u h√≥a hi·ªáu su·∫•t c·ªßa ·ª©ng d·ª•ng b·∫±ng c√°c k·ªπ thu·∫≠t nh∆∞ lazy loading, code splitting, v√† t·ªëi ∆∞u h√≥a h√¨nh ·∫£nh.\n‚Ä¢ Ch·ªß ƒë·ªông t√¨m ki·∫øm, ph√¢n t√≠ch v√† s·ª≠a c√°c l·ªói ph√°t sinh trong qu√° tr√¨nh ph√°t tri·ªÉn v√† sau khi tri·ªÉn khai s·∫£n ph·∫©m.",
"requirements": "‚Ä¢ C√≥ √≠t nh·∫•t 2 nƒÉm kinh nghi·ªám th·ª±c t·∫ø v·ªõi React.JS v√† c√°c th∆∞ vi·ªán li√™n quan nh∆∞ Redux/Redux Toolkit, MobX.\n‚Ä¢ Th√†nh th·∫°o vi·ªác s·ª≠ d·ª•ng HTML5, CSS3/SASS, v√† JavaScript (ES6+).\n‚Ä¢ C√≥ kinh nghi·ªám l√†m vi·ªác v·ªõi c√°c RESTful APIs v√† x·ª≠ l√Ω d·ªØ li·ªáu JSON.\n‚Ä¢ Hi·ªÉu bi·∫øt v·ªÅ c√°c c√¥ng c·ª• qu·∫£n l√Ω tr·∫°ng th√°i, router v√† c√°c th∆∞ vi·ªán x√¢y d·ª±ng giao di·ªán ng∆∞·ªùi d√πng nh∆∞ Material-UI, Ant Design.\n‚Ä¢ C√≥ kinh nghi·ªám v·ªõi Git ƒë·ªÉ qu·∫£n l√Ω m√£ ngu·ªìn.\n‚Ä¢ ∆Øu ti√™n ·ª©ng vi√™n c√≥ ki·∫øn th·ª©c v·ªÅ Next.js, TypeScript v√† testing (Jest, React Testing Library).",
"benefits": "‚Ä¢ L∆∞∆°ng v√† th∆∞·ªüng: M·ª©c l∆∞∆°ng c·∫°nh tranh, h·∫•p d·∫´n v√† t∆∞∆°ng x·ª©ng v·ªõi nƒÉng l·ª±c. X√©t duy·ªát tƒÉng l∆∞∆°ng ƒë·ªãnh k·ª≥ 2 l·∫ßn/nƒÉm.\n‚Ä¢ Ch·∫ø ƒë·ªô b·∫£o hi·ªÉm: ƒê·∫ßy ƒë·ªß c√°c ch·∫ø ƒë·ªô B·∫£o hi·ªÉm x√£ h·ªôi, B·∫£o hi·ªÉm y t·∫ø, B·∫£o hi·ªÉm th·∫•t nghi·ªáp theo lu·∫≠t ƒë·ªãnh.\n‚Ä¢ S·ª©c kh·ªèe: Kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥ h√†ng nƒÉm v√† h∆∞·ªüng g√≥i b·∫£o hi·ªÉm s·ª©c kh·ªèe cao c·∫•p.\n‚Ä¢ Du l·ªãch v√† ho·∫°t ƒë·ªông t·∫≠p th·ªÉ: Du l·ªãch c√¥ng ty h√†ng nƒÉm, c√°c bu·ªïi team building s√¥i ƒë·ªông, li√™n hoan h√†ng th√°ng.\n‚Ä¢ M√¥i tr∆∞·ªùng l√†m vi·ªác: M√¥i tr∆∞·ªùng l√†m vi·ªác tr·∫ª trung, nƒÉng ƒë·ªông, tho·∫£i m√°i. L·ªô tr√¨nh thƒÉng ti·∫øn r√µ r√†ng, ƒë∆∞·ª£c t·∫°o ƒëi·ªÅu ki·ªán ph√°t tri·ªÉn t·ªëi ƒëa.",    otherInfo: {
      degree: "Cao ƒë·∫≥ng tr·ªü l√™n",
      experience: "1 nƒÉm kinh nghi·ªám",
      workType: "To√†n th·ªùi gian",
    },
  },
  // Th√™m c√°c job kh√°c v·ªõi th√¥ng tin chi ti·∫øt t∆∞∆°ng t·ª±
  {
    id: 2,
    title: "Fresher Backend Java",
    salary: "15 - 30 tri·ªáu",
    company: "C√¥ng ty C·ªï ph·∫ßn Falcon Technology",
    location: "H√† N·ªôi",
    logo: require("../../../assets/images/bg9.jpg"),
    verified: true,
    description: "Ph√°t tri·ªÉn v√† duy tr√¨ c√°c h·ªá th·ªëng backend b·∫±ng Java. T·ªëi ∆∞u h√≥a hi·ªáu su·∫•t v√† ƒë·ªô tin c·∫≠y c·ªßa ·ª©ng d·ª•ng.",
    requirements: "C√≥ ki·∫øn th·ª©c v·ªØng v·ªÅ Java, Spring Boot. Hi·ªÉu bi·∫øt v·ªÅ database (SQL, NoSQL).",
    benefits: "L∆∞∆°ng h·∫•p d·∫´n, th∆∞·ªüng d·ª± √°n, l·ªô tr√¨nh thƒÉng ti·∫øn r√µ r√†ng, ƒë∆∞·ª£c ƒë√†o t·∫°o b√†i b·∫£n.",
    otherInfo: {
      degree: "ƒê·∫°i h·ªçc",
      experience: "0 nƒÉm kinh nghi·ªám",
      workType: "To√†n th·ªùi gian",
    },
  }
];// Th√™m ƒëo·∫°n code n√†y v√†o ƒë·∫ßu file c·ªßa b·∫°n
interface Job {
  id: number;
  title: string;
  salary: string;
  company: string;
  location: string;
  logo: string;
  verified?: boolean; // D·∫•u '?' cho bi·∫øt thu·ªôc t√≠nh n√†y l√† t√πy ch·ªçn
  description?: string;
  requirements?: string;
  benefits?: string;
  otherInfo?: {
    degree: string;
    experience: string;
    workType: string;
  };
}
export default function TrangChuScreen() {
  const jobsPerPage = 4;
const [selectedJob, setSelectedJob] = useState<Job | null>(null);  
const handlePressJob = (job: Job) => {
    setSelectedJob(job);
  };
  const handleCloseDetail = () => {
    setSelectedJob(null);
  };
  const [currentPage, setCurrentPage] = useState(0);
  const totalPages = Math.ceil(suggestedJobs.length / jobsPerPage);
  const startIndex = currentPage * jobsPerPage;
  const endIndex = startIndex + jobsPerPage;
  const jobsToShow = suggestedJobs.slice(startIndex, endIndex);

  const handleNextPage = () => {
    if (currentPage < totalPages - 1) {
      setCurrentPage(currentPage + 1);
    }
  };

  const handlePrevPage = () => {
    if (currentPage > 0) {
      setCurrentPage(currentPage - 1);
    }
  };
  const jobCategories = [
    { title: "Vi·ªác l√†m", icon: "üíº", color: "#4CAF50" },
    { title: "C√¥ng ty", icon: "üè¢", color: "#2196F3" },
    { title: "T·∫°o CV", icon: "üìÑ", color: "#FF9800" },
    { title: "Blog", icon: "üì∞", color: "#8BC34A" },
    { title: "C√¥ng c·ª•", icon: "üõ†Ô∏è", color: "#FF5722" },
  ];


  const topJobs = [
    {
      id: 9,
      title: "Java Engineer",
      salary: "800 - 3,500 USD",
      company: "Kh·ªëi C√¥ng ngh·ªá th√¥ng tin - Viettel Telecom",
      location: "H√† N·ªôi",
    },
    {
      id: 10,
      title: "Chuy√™n Vi√™n Ph√°t Tri·ªÉn K√™nh Truy·ªÅn Th√¥ng - Kinh Nghi·ªám 2 NƒÉm",
      salary: "10 - 15 tri·ªáu",
      company: "C√îNG TY C·ªî PH·∫¶N MEGA SUN",
      location: "H√† N·ªôi",
    },
    {
    id: 9,
    title: "Java Engineer",
    salary: "800 - 3,500 USD",
    company: "Kh·ªëi C√¥ng ngh·ªá th√¥ng tin - Viettel Telecom",
    location: "H√† N·ªôi",
  },
  {
    id: 10,
    title: "Chuy√™n Vi√™n Ph√°t Tri·ªÉn K√™nh Truy·ªÅn Th√¥ng - Kinh Nghi·ªám 2 NƒÉm",
    salary: "10 - 15 tri·ªáu",
    company: "C√îNG TY C·ªî PH·∫¶N MEGA SUN",
    location: "H√† N·ªôi",
  },
  // 8 m·∫´u d·ªØ li·ªáu m·ªõi ƒë∆∞·ª£c th√™m v√†o
  {
    id: 11,
    title: "Product Manager",
    salary: "1,500 - 2,500 USD",
    company: "C√¥ng ty C·ªï ph·∫ßn Techcombank",
    location: "TP. H·ªì Ch√≠ Minh",
  },
  {
    id: 12,
    title: "Front End Developer (Vue.js)",
    salary: "15 - 25 tri·ªáu",
    company: "C√¥ng ty C·ªï ph·∫ßn Vietcombank",
    location: "ƒê√† N·∫µng",
  },
  {
    id: 13,
    title: "Backend Engineer (Node.js)",
    salary: "1,200 - 2,000 USD",
    company: "T·∫≠p ƒëo√†n Vingroup",
    location: "H√† N·ªôi",
  },
  {
    id: 14,
    title: "Data Scientist",
    salary: "1,800 - 3,000 USD",
    company: "FPT Software",
    location: "TP. H·ªì Ch√≠ Minh",
  },
  {
    id: 15,
    title: "Business Analyst",
    salary: "12 - 20 tri·ªáu",
    company: "C√¥ng ty C·ªï ph·∫ßn FPT",
    location: "H√† N·ªôi",
  },
  {
    id: 16,
    title: "Mobile Developer (iOS/Swift)",
    salary: "18 - 30 tri·ªáu",
    company: "C√¥ng ty TNHH TMA Solutions",
    location: "TP. H·ªì Ch√≠ Minh",
  },
  {
    id: 17,
    title: "HR Specialist",
    salary: "8 - 14 tri·ªáu",
    company: "C√¥ng ty C·ªï ph·∫ßn Viettel",
    location: "H√† N·ªôi",
  },
  {
    id: 18,
    title: "Graphic Designer",
    salary: "9 - 16 tri·ªáu",
    company: "C√¥ng ty TNHH Gameloft",
    location: "TP. H·ªì Ch√≠ Minh",
  }
  ];

  const topCompanies = [
    {
      name: "Ng√¢n H√†ng TMCP Vi·ªát Nam Th·ªãnh V∆∞·ª£ng (VPBank)",
      category: "Ng√¢n h√†ng",
      logo: require("../../../assets/images/react-logo.png"),
    },
    {
      name: "NG√ÇN H√ÄNG TH∆Ø∆†NG M·∫†I C·ªî PH·∫¶N K·ª∏ TH∆Ø∆†NG VI·ªÜT NAM (TECHCOMBANK)",
      category: "Ng√¢n h√†ng",
      logo: require("../../../assets/images/react-logo.png"),
    },
  ];

  return (
    <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>
      {/* Header */}
      <View style={styles.header}>
        <View style={styles.logoContainer}>
          <Image
            source={require("../../../assets/images/react-logo.png")}
            style={styles.logoImg}
          />
        </View>
      </View>

      {/* Search Bar */}
      <View style={styles.searchBarWrap}>
        <Ionicons
          name="search"
          size={20}
          color="#4CAF50"
          style={styles.searchIcon}
        />
        <TextInput
          placeholder="th·ª±c t·∫≠p sinh c√¥ng ngh·ªá th√¥ng tin"
          style={styles.searchInput}
          placeholderTextColor="#999"
        />
      </View>

      {/* Job Categories */}
      <View style={styles.categoriesRow}>
        {jobCategories.map((category, idx) => (
          <View key={idx} style={styles.categoryCol}>
            <View
              style={[styles.categoryCircle, { backgroundColor: "#E6F4EA" }]}
            >
              <Text style={{ fontSize: 28 }}>{category.icon}</Text>
            </View>
            <Text style={styles.categoryLabel}>{category.title}</Text>
          </View>
        ))}
      </View>

      {/* Discover Jobs Button */}
      <TouchableOpacity style={styles.discoverBtn}>
        <Ionicons
          name="map"
          size={18}
          color="#3B82F6"
          style={{ marginRight: 6 }}
        />
        <Text style={styles.discoverBtnText}>Kh√°m ph√° vi·ªác l√†m g·∫ßn b·∫°n</Text>
      </TouchableOpacity>

      {/* G·ª£i √Ω vi·ªác l√†m ph√π h·ª£p */}
      <View style={styles.sectionBlock}>
        <View style={styles.sectionHeader}>
          <Text style={styles.sectionTitle}>G·ª£i √Ω vi·ªác l√†m ph√π h·ª£p</Text>
          <TouchableOpacity>
            <Text style={styles.sectionAction}>Xem t·∫•t c·∫£</Text>
          </TouchableOpacity>
        </View>
        {/* Danh s√°ch c√¥ng vi·ªác */}
        {/* N√∫t ƒëi·ªÅu h∆∞·ªõng */}
      <View style={styles.paginationControls}>
        <TouchableOpacity onPress={handlePrevPage} disabled={currentPage === 0}>
          <Text style={{ color: currentPage === 0 ? '#ccc' : '#007bff' }}>{'<'} Trang tr∆∞·ªõc</Text>
        </TouchableOpacity>
        <Text style={styles.pageNumber}>
          Trang {currentPage + 1} / {totalPages}
        </Text>
        <TouchableOpacity onPress={handleNextPage} disabled={currentPage === totalPages - 1}>
          <Text style={{ color: currentPage === totalPages - 1 ? '#ccc' : '#007bff' }}>Trang sau {'>'}</Text>
        </TouchableOpacity>
      </View>

      {/* Danh s√°ch c√¥ng vi·ªác */}
      {/* Danh s√°ch c√¥ng vi·ªác */}
      {jobsToShow.map((job) => (
        <TouchableOpacity key={job.id} onPress={() => handlePressJob(job)}>
          <View style={styles.jobCard}>
            <View style={styles.jobCardRow}>
              <Image source={{ uri: job.logo }} style={styles.jobLogo} />
              <View style={{ flex: 1 }}>
                <View style={{ flexDirection: "row", alignItems: "center" }}>
                  <Text style={styles.jobTitle}>{job.title}</Text>
                  {job.verified && (
                    <Ionicons name="checkmark-circle" size={16} color="#4CAF50" style={{ marginLeft: 4 }} />
                  )}
                </View>
                <Text style={styles.jobCompany}>{job.company}</Text>
              </View>
              <TouchableOpacity>
                <Ionicons name="heart-outline" size={20} color="#3B82F6" />
              </TouchableOpacity>
            </View>
            <View style={styles.jobCardFooter}>
              <View style={styles.salaryTag}>
                <Text style={styles.salaryText}>{job.salary}</Text>
              </View>
              <View style={styles.locationTag}>
                <Text style={styles.locationText}>{job.location}</Text>
              </View>
            </View>
          </View>
        </TouchableOpacity>
      ))}
      </View>

      {/* /* Modal chi ti·∫øt c√¥ng vi·ªác */}
      {/* Modal hi·ªÉn th·ªã chi ti·∫øt */}
      <Modal
        animationType="slide"
        visible={selectedJob !== null}
        onRequestClose={handleCloseDetail}
      >
        <View style={styles.detailContainer}>
          <View style={styles.detailHeader}>
            <TouchableOpacity onPress={handleCloseDetail}>
              <Ionicons name="arrow-back" size={24} color="#333" />
            </TouchableOpacity>
            <Text style={styles.detailTitle}>{selectedJob?.title}</Text>
            <TouchableOpacity>
              <Ionicons name="ellipsis-vertical" size={24} color="#333" />
            </TouchableOpacity>
          </View>

          <ScrollView style={styles.detailContent}>
        <Image source={{ uri: selectedJob?.logo }} style={styles.detailLogo} />            <Text style={styles.detailJobTitle}>{selectedJob?.title}</Text>
            <Text style={styles.detailCompany}>{selectedJob?.company}</Text>
            <View style={styles.infoTags}>
              <View style={styles.infoTag}>
                <Ionicons name="cash-outline" size={20} color="#333" />
                <Text style={styles.infoText}>{selectedJob?.salary}</Text>
              </View>
              <View style={styles.infoTag}>
                <Ionicons name="location-outline" size={20} color="#333" />
                <Text style={styles.infoText}>{selectedJob?.location}</Text>
              </View>
              <View style={styles.infoTag}>
                <Ionicons name="star-outline" size={20} color="#333" />
                <Text style={styles.infoText}>{selectedJob?.otherInfo?.experience}</Text>
              </View>
            </View>

            <View style={styles.section}>
              <Text style={styles.sectionTitle}>M√¥ t·∫£ c√¥ng vi·ªác</Text>
              <Text style={styles.sectionText}>{selectedJob?.description}</Text>
            </View>
            <View style={styles.section}>
              <Text style={styles.sectionTitle}>Y√™u c·∫ßu ·ª©ng vi√™n</Text>
              <Text style={styles.sectionText}>{selectedJob?.requirements}</Text>
            </View>
            <View style={styles.section}>
              <Text style={styles.sectionTitle}>Quy·ªÅn l·ª£i</Text>
              <Text style={styles.sectionText}>{selectedJob?.benefits}</Text>
            </View>
          <View style={{flexDirection: 'column',backgroundColor: '#FFFFFF', padding: 15, borderRadius: 8}}>
            <View>
            <Text style={{fontSize: 16, fontWeight: 'bold', marginBottom: 16}}>Vi·ªác l√†m t·ªët nh·∫•t</Text>
            </View>
            {topJobs.map((job, idx) => (
          <View key={job.id} style={styles.jobCard}>
            <View style={styles.jobCardRow}>
              <View style={styles.jobLogoPlaceholder} />
              <View style={{ flex: 1 }}>
                <Text style={styles.jobTitle}>{job.title}</Text>
                <Text style={styles.jobCompany}>{job.company}</Text>
              </View>
              <TouchableOpacity>
                <Ionicons name="heart-outline" size={20} color="#3B82F6" />
              </TouchableOpacity>
            </View>
            <View style={styles.jobCardFooter}>
              <View style={styles.salaryTag}>
                <Text style={styles.salaryText}>{job.salary}</Text>
              </View>
              <View style={styles.locationTag}>
                <Text style={styles.locationText}>{job.location}</Text>
              </View>
            </View>
          </View>
        ))}
          </View>
        

          </ScrollView>

          <View style={styles.applyFooter}>
            <TouchableOpacity style={styles.saveButton}>
              <Ionicons name="heart-outline" size={24} color="#22C55E" />
            </TouchableOpacity>
            <TouchableOpacity style={styles.applyButton}>
              <Text style={styles.applyButtonText}>·ª®ng tuy·ªÉn ngay</Text>
            </TouchableOpacity>
          </View>
        </View>
      </Modal>
      {/* Vi·ªác l√†m t·ªët nh·∫•t */}
      <View style={styles.sectionBlock}>
        <View style={styles.sectionHeader}>
          <Text style={styles.sectionTitle}>Vi·ªác l√†m t·ªët nh·∫•t</Text>
          <TouchableOpacity>
            <Text style={styles.sectionAction}>Xem t·∫•t c·∫£</Text>
          </TouchableOpacity>
        </View>
        {topJobs.map((job, idx) => (
          <View key={job.id} style={styles.jobCard}>
            <View style={styles.jobCardRow}>
              <View style={styles.jobLogoPlaceholder} />
              <View style={{ flex: 1 }}>
                <Text style={styles.jobTitle}>{job.title}</Text>
                <Text style={styles.jobCompany}>{job.company}</Text>
              </View>
              <TouchableOpacity>
                <Ionicons name="heart-outline" size={20} color="#3B82F6" />
              </TouchableOpacity>
            </View>
            <View style={styles.jobCardFooter}>
              <View style={styles.salaryTag}>
                <Text style={styles.salaryText}>{job.salary}</Text>
              </View>
              <View style={styles.locationTag}>
                <Text style={styles.locationText}>{job.location}</Text>
              </View>
            </View>
          </View>
        ))}
      </View>

      {/* Th∆∞∆°ng hi·ªáu l·ªõn ti√™u bi·ªÉu */}
      <View style={styles.sectionBlock}>
        <View style={styles.sectionHeader}>
          <Text style={styles.sectionTitle}>Th∆∞∆°ng hi·ªáu l·ªõn ti√™u bi·ªÉu</Text>
          <TouchableOpacity>
            <Text style={styles.sectionAction}>Xem t·∫•t c·∫£</Text>
          </TouchableOpacity>
        </View>
        <View style={styles.companyGrid}>
          {topCompanies.map((company, idx) => (
            <View key={idx} style={styles.companyCard}>
              <View style={styles.companyLogoWrap}>
                <Image source={company.logo} style={styles.companyLogoImg} />
              </View>
              <Text style={styles.companyNameCard} numberOfLines={2}>
                {company.name}
              </Text>
              <Text style={styles.companyCategoryCard}>{company.category}</Text>
              <TouchableOpacity style={styles.followBtn}>
                <Ionicons name="add" size={16} color="#3B82F6" />
                <Text style={styles.followBtnText}>Theo d√µi</Text>
              </TouchableOpacity>
            </View>
          ))}
        </View>
      </View>

      {/* Banner d∆∞·ªõi c√πng */}
      <View style={styles.bottomBanner}>
        <Text style={styles.bannerTitle}>100+ M·∫´u</Text>
        <TouchableOpacity style={styles.bannerBtn}>
          <Ionicons
            name="map"
            size={18}
            color="#3B82F6"
            style={{ marginRight: 6 }}
          />
          <Text style={styles.bannerBtnText}>Vi·ªác l√†m g·∫ßn b·∫°n</Text>
        </TouchableOpacity>
      </View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    height: '100%',
    backgroundColor: "#F3F4F6",
    paddingTop: 8,
  },
  header: {
    paddingHorizontal: 16,
    paddingTop: 8,
    paddingBottom: 4,
    backgroundColor: "#F3F4F6",
  },
  logoContainer: {
    alignItems: "center",
    marginBottom: 8,
  },
  logoImg: {
    width: 40,
    height: 40,
    resizeMode: "contain",
  },
  searchBarWrap: {
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "#fff",
    borderRadius: 24,
    marginHorizontal: 16,
    marginBottom: 12,
    paddingHorizontal: 12,
    paddingVertical: 6,
    shadowColor: "#000",
    shadowOpacity: 0.04,
    shadowRadius: 4,
    elevation: 1,
  },
  searchIcon: {
    marginRight: 8,
  },
  searchInput: {
    flex: 1,
    fontSize: 15,
    color: "#222",
    paddingVertical: 4,
  },
  categoriesRow: {
    flexDirection: "row",
    justifyContent: "space-between",
    marginHorizontal: 16,
    marginBottom: 10,
  },
  categoryCol: {
    alignItems: "center",
    flex: 1,
  },
  categoryCircle: {
    width: 54,
    height: 54,
    borderRadius: 27,
    alignItems: "center",
    justifyContent: "center",
    marginBottom: 4,
  },
  categoryLabel: {
    fontSize: 13,
    color: "#222",
    marginTop: 2,
  },
  discoverBtn: {
    flexDirection: "row",
    alignItems: "center",
    alignSelf: "center",
    backgroundColor: "#fff",
    borderRadius: 20,
    paddingHorizontal: 18,
    paddingVertical: 8,
    marginVertical: 10,
    shadowColor: "#000",
    shadowOpacity: 0.04,
    shadowRadius: 4,
    elevation: 1,
  },
  discoverBtnText: {
    color: "#3B82F6",
    fontWeight: "600",
    fontSize: 15,
  },
  sectionBlock: {
    backgroundColor: "#fff",
    borderRadius: 18,
    marginHorizontal: 16,
    marginBottom: 14,
    padding: 14,
    shadowColor: "#000",
    shadowOpacity: 0.03,
    shadowRadius: 4,
    elevation: 1,
  },
  sectionHeader: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: 8,
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: "700",
    color: "#222",
  },
  sectionAction: {
    color: "#22C55E",
    fontWeight: "600",
    fontSize: 14,
  },
  jobCard: {
    backgroundColor: "#F8FAFC",
    borderRadius: 14,
    padding: 12,
    marginBottom: 10,
    borderWidth: 1,
    borderColor: "#E0E7EF",
  },
  jobCardRow: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 6,
  },
  jobLogo: {
    width: 38,
    height: 38,
    borderRadius: 8,
    marginRight: 10,
    backgroundColor: "#fff",
    borderWidth: 1,
    borderColor: "#E0E7EF",
  },
  jobLogoPlaceholder: {
    width: 38,
    height: 38,
    borderRadius: 8,
    marginRight: 10,
    backgroundColor: "#E5E7EB",
  },
  jobTitle: {
    fontSize: 15,
    fontWeight: "600",
    color: "#222",
    flexShrink: 1,
  },
  jobCompany: {
    fontSize: 13,
    color: "#6B7280",
    marginTop: 2,
  },
  jobCardFooter: {
    flexDirection: "row",
    alignItems: "center",
    marginTop: 2,
  },
  salaryTag: {
    backgroundColor: "#E6F4EA",
    borderRadius: 12,
    paddingHorizontal: 10,
    paddingVertical: 2,
    marginRight: 8,
  },
  salaryText: {
    color: "#22C55E",
    fontWeight: "600",
    fontSize: 13,
  },
  locationTag: {
    backgroundColor: "#F1F5F9",
    borderRadius: 12,
    paddingHorizontal: 10,
    paddingVertical: 2,
  },
  locationText: {
    color: "#64748B",
    fontSize: 13,
  },
  companyGrid: {
    flexDirection: "row",
    flexWrap: "wrap",
    justifyContent: "space-between",
    marginTop: 6,
  },
  companyCard: {
    width: "48%",
    backgroundColor: "#F8FAFC",
    borderRadius: 14,
    padding: 12,
    marginBottom: 10,
    alignItems: "center",
    borderWidth: 1,
    borderColor: "#E0E7EF",
  },
  companyLogoWrap: {
    width: 38,
    height: 38,
    borderRadius: 8,
    backgroundColor: "#fff",
    borderWidth: 1,
    borderColor: "#E0E7EF",
    alignItems: "center",
    justifyContent: "center",
    marginBottom: 6,
  },
  companyLogoImg: {
    width: 28,
    height: 28,
    resizeMode: "contain",
  },
  companyNameCard: {
    fontSize: 13,
    color: "#222",
    fontWeight: "600",
    textAlign: "center",
    marginBottom: 2,
  },
  companyCategoryCard: {
    fontSize: 12,
    color: "#64748B",
    marginBottom: 6,
  },
  followBtn: {
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "#fff",
    borderRadius: 16,
    borderWidth: 1,
    borderColor: "#3B82F6",
    paddingHorizontal: 10,
    paddingVertical: 3,
  },
  followBtnText: {
    color: "#3B82F6",
    fontWeight: "600",
    fontSize: 13,
    marginLeft: 4,
  },
  bottomBanner: {
    backgroundColor: "#fff",
    borderRadius: 18,
    marginHorizontal: 16,
    marginBottom: 16,
    padding: 16,
    alignItems: "center",
    flexDirection: "row",
    justifyContent: "space-between",
    shadowColor: "#000",
    shadowOpacity: 0.03,
    shadowRadius: 4,
    elevation: 1,
  },
  bannerTitle: {
    fontSize: 16,
    fontWeight: "700",
    color: "#222",
    marginRight: 12,
  },
  bannerBtn: {
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "#E6F4EA",
    borderRadius: 16,
    paddingHorizontal: 12,
    paddingVertical: 6,
  },
  bannerBtnText: {
    color: "#22C55E",
    fontWeight: "600",
    fontSize: 14,
  },
  paginationControls: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 20,
  },
  pageNumber: {
    fontWeight: 'bold',
  },
  
  footer: { height: 100 },
  // Styles for Job Detail Modal
  detailContainer: {
    flex: 1,
    backgroundColor: '#F0F2F5',
  },
  detailHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    padding: 15,
    backgroundColor: '#fff',
    borderBottomWidth: 1,
    borderBottomColor: '#ddd',
  },
  detailTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    flex: 1,
    textAlign: 'center',
  },
  detailContent: {
    flex: 1,
    padding: 15,
  },
  detailLogo: {
    width: 80,
    height: 80,
    borderRadius: 40,
    alignSelf: 'center',
    marginBottom: 10,
  },
  detailJobTitle: {
    fontSize: 22,
    fontWeight: 'bold',
    textAlign: 'center',
    color: '#333',
    marginBottom: 5,
  },
  detailCompany: {
    fontSize: 16,
    textAlign: 'center',
    color: '#666',
    marginBottom: 20,
  },
  infoTags: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    marginBottom: 20,
  },
  infoTag: {
    alignItems: 'center',
  },
  infoText: {
    fontSize: 14,
    color: '#333',
    marginTop: 5,
  },
  section: {
    backgroundColor: '#fff',
    borderRadius: 8,
    padding: 15,
    marginBottom: 15,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 5,
    elevation: 3,
  },

  sectionText: {
    fontSize: 14,
    color: '#555',
    lineHeight: 22,
  },
  applyFooter: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 15,
    backgroundColor: '#fff',
    borderTopWidth: 1,
    borderTopColor: '#ddd',
  },
  saveButton: {
    padding: 10,
    borderWidth: 1,
    borderColor: '#ddd',
    borderRadius: 8,
    marginRight: 15,
  },
  applyButton: {
    flex: 1,
    backgroundColor: '#22C55E',
    padding: 15,
    borderRadius: 8,
    alignItems: 'center',
  },
  applyButtonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
});
