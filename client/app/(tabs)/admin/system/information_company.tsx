import React from "react";
import { TouchableOpacity, Text, View, ScrollView, Dimensions, StyleSheet } from "react-native";
import { Appbar } from 'react-native-paper';
// Import c√°c th∆∞ vi·ªán kh√°c n·∫øu b·∫°n ƒë√£ c√†i ƒë·∫∑t ch√∫ng (gi·ªØ nguy√™n t·ª´ code c·ªßa b·∫°n)
// import { useRouter, usePathname, Slot } from "expo-router";
// import Ionicons from "@expo/vector-icons/Ionicons";
// import { ImageBackground } from "react-native";
// import { LinearGradient } from "expo-linear-gradient";

const { width } = Dimensions.get('window');

// =======================================================
// 1. INTERFACES V√Ä D·ªÆ LI·ªÜU
// =======================================================

interface CompanyInfo {
  // Ph·∫ßn C√îNG TY
  fullName: string;
  shortName: string;
  businessType: string;
  taxCode: string;
  companyCode: string;
  establishmentDate: string;
  logoStatus: string; 

  // Ph·∫ßn ƒêƒÇNG K√ù KINH DOANH
  dkkdCode: string; // M√£ s·ªë ƒêKKD
  issueDate: string; // Ng√†y c·∫•p
  issuePlace: string; // N∆°i c·∫•p
  legalRepresentative: string; // Ng∆∞·ªùi ƒë·∫°i di·ªán ph√°p lu·∫≠t
  position: string; // Ch·ª©c danh

  // Ph·∫ßn LI√äN H·ªÜ
  address: string;
  phone: string;
  fax: string;
  email: string;
  website: string;
}

interface CompanyProfileProps {
  companyData?: CompanyInfo; // Props l√† optional v√¨ ta c√≥ gi√° tr·ªã m·∫∑c ƒë·ªãnh
  onEdit: () => void;
}

// D·ªÆ LI·ªÜU M·∫™U ƒê·∫¶Y ƒê·ª¶ (D√πng l√†m gi√° tr·ªã m·∫∑c ƒë·ªãnh)
const FULL_SAMPLE_COMPANY_DATA: CompanyInfo = {
  // C√îNG TY
  fullName: 'Ti·ªÉu Tu·∫•n Th·ªã ƒê·ªó',
  shortName: 'Ti·ªÉu Tu·∫•n Th·ªã ƒê·ªó',
  businessType: 'Doanh nghi·ªáp',
  taxCode: '1122122111',
  companyCode: 'I993zurm',
  establishmentDate: '-',
  logoStatus: 'Ch∆∞a c√≥ ·∫£nh',
  // ƒêƒÇNG K√ù KINH DOANH
  dkkdCode: '-',
  issueDate: '-',
  issuePlace: '-',
  legalRepresentative: 'ƒê·ªó Ti·ªÉu Tu·∫•n Th·ªã',
  position: '-',
  // LI√äN H·ªÜ
  address: '-',
  phone: '0862183019',
  fax: '-',
  email: 'dogiang2902@gmail.com',
  website: '-',
};

// =======================================================
// 2. M√ÄU S·∫ÆC
// =======================================================

const COLORS = {
  primary: '#1E90FF', // M√†u xanh d∆∞∆°ng cho n√∫t
  white: '#FFFFFF',    
  text: '#333333',
  label: '#666666',
  background: '#F0F2F5', // M√†u n·ªÅn ph√¢n c√°ch m·ªù
  border: '#DDDDDD',
  lightGray: '#F9F9F9', // M√†u d·∫£i ph√¢n c√°ch section
};

// =======================================================
// 3. COMPONENT CON: SimpleInfoRow
// =======================================================

interface SimpleInfoRowProps {
  label: string;
  value: string;
}

const SimpleInfoRow: React.FC<SimpleInfoRowProps> = ({ label, value }) => (
  <View style={styles.row}>
    <Text style={styles.label}>{label}</Text>
    <Text style={styles.value}>{value}</Text>
  </View>
);

// =======================================================
// 4. COMPONENT CH√çNH: CompanyProfileFull
// =======================================================

const CompanyProfileFull: React.FC<CompanyProfileProps> = ({ 
    // üî• S·ª¨A L·ªñI: Cung c·∫•p gi√° tr·ªã m·∫∑c ƒë·ªãnh cho companyData
    companyData = FULL_SAMPLE_COMPANY_DATA, 
    onEdit 
}) => {
    
    // ƒê·ªãnh nghƒ©a LogoDisplay (JSX Element)
    const LogoDisplay = (
        <View style={styles.logoContainer}>
            <Text style={styles.logoStatus}>{companyData.logoStatus}</Text> 
        </View>
    );

    return (
        // View l·ªõn nh·∫•t bao ngo√†i m√†n h√¨nh
        <View style={{ flex: 1, backgroundColor: COLORS.white }}>
            {/* Navbar tr√™n c√πng (d√πng cho thi·∫øt k·∫ø to√†n m√†n h√¨nh) */}
           
            <View style={styles.navbar}>
                <Text style={styles.navbarTitle}>Th√¥ng tin c√¥ng ty</Text>
            </View>
            
            <ScrollView style={styles.scrollView}>
                {/* Header (Ph·∫ßn m√¥ t·∫£ v√† n√∫t Ch·ªânh s·ª≠a) */}
                <View style={styles.headerContainer}> 
                    <View style={styles.header}>
                        <View style={styles.headerTextContainer}>
                            <Text style={styles.description}>
                                Khai b√°o v√† c·∫≠p nh·∫≠t th√¥ng tin c·ªßa c√¥ng ty ƒë·ªÉ h·ªá th·ªëng t·ª± ƒë·ªông l·∫•y l√™n c√°c b√°o c√°o, t√†i li·ªáu,...
                            </Text>
                        </View>
                        <TouchableOpacity style={styles.editButton} onPress={onEdit}>
                            <Text style={styles.editButtonText}>Ch·ªânh s·ª≠a</Text>
                        </TouchableOpacity>
                    </View>
                </View>

                {/* N·ªôi dung ch√≠nh */}
                <View style={styles.body}>

                    {/* === PH·∫¶N 1: C√îNG TY === */}
                    <Text style={styles.sectionTitle}>C√îNG TY</Text>
                    <View style={styles.infoBlock}>
                        <SimpleInfoRow label="T√™n ƒë·∫ßy ƒë·ªß" value={companyData.fullName} />
                        <SimpleInfoRow label="T√™n giao d·ªãch/vi·∫øt t·∫Øt" value={companyData.shortName} />
                        <SimpleInfoRow label="Lo·∫°i h√¨nh kinh doanh" value={companyData.businessType} />
                        <SimpleInfoRow label="M√£ s·ªë thu·∫ø" value={companyData.taxCode} />
                        <SimpleInfoRow label="M√£ c√¥ng ty" value={companyData.companyCode} />
                        <SimpleInfoRow label="Ng√†y th√†nh l·∫≠p" value={companyData.establishmentDate} />
                        
                        {/* X·ª≠ l√Ω Logo (Component JSX) */}
                        <View style={styles.row}>
                            <Text style={styles.label}>Logo c√¥ng ty</Text>
                            {LogoDisplay} 
                        </View>
                    </View>

                    {/* D·∫£i ph√¢n c√°ch */}
                    <View style={styles.divider} />

                    {/* === PH·∫¶N 2: ƒêƒÇNG K√ù KINH DOANH === */}
                    <Text style={styles.sectionTitle}>ƒêƒÇNG K√ù KINH DOANH</Text>
                    <View style={styles.infoBlock}>
                        <SimpleInfoRow label="M√£ s·ªë ƒêKKD" value={companyData.dkkdCode} />
                        <SimpleInfoRow label="Ng√†y c·∫•p" value={companyData.issueDate} />
                        <SimpleInfoRow label="N∆°i c·∫•p" value={companyData.issuePlace} />
                        <SimpleInfoRow label="Ng∆∞·ªùi ƒë·∫°i di·ªán ph√°p lu·∫≠t" value={companyData.legalRepresentative} />
                        <SimpleInfoRow label="Ch·ª©c danh" value={companyData.position} />
                    </View>

                    <View style={styles.divider} />

                    {/* === PH·∫¶N 3: LI√äN H·ªÜ === */}
                    <Text style={styles.sectionTitle}>LI√äN H·ªÜ</Text>
                    <View style={styles.infoBlock}>
                        <SimpleInfoRow label="ƒê·ªãa ch·ªâ" value={companyData.address} />
                        <SimpleInfoRow label="ƒêi·ªán tho·∫°i" value={companyData.phone} />
                        <SimpleInfoRow label="Fax" value={companyData.fax} />
                        <SimpleInfoRow label="Email" value={companyData.email} />
                        <SimpleInfoRow label="Website" value={companyData.website} />
                    </View>
                </View>
            </ScrollView>
        </View>
    );
};


// =======================================================
// 5. STYLESHEET
// =======================================================

const styles = StyleSheet.create({
    // Style cho thanh Navbar m·ªõi th√™m
    navbar: {
        backgroundColor: '#E2E2E2',
        padding: 20
    },
    navbarTitle: {
        fontSize: 25,
        fontWeight: 'bold',
        color: COLORS.text,
    },
    headerContainer: {
        paddingHorizontal: 15, 
        paddingTop: 15,
        backgroundColor: COLORS.white,
    },
    header: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'flex-start',
        paddingBottom: 15,
        borderBottomWidth: 1,
        borderBottomColor: COLORS.background,
    },
    headerTextContainer: {
        flex: 1,
        paddingRight: 10,
    },
    description: {
        fontSize: 13,
        color: COLORS.label,
        lineHeight: 18,
    },
    editButton: {
        backgroundColor: COLORS.primary,
        paddingVertical: 8,
        paddingHorizontal: 15,
        borderRadius: 4,
        minWidth: 100,
        alignSelf: 'flex-start',
        alignItems: 'center',
    },
    editButtonText: {
        color: COLORS.white,
        fontSize: 14,
        fontWeight: '600',
    },
    scrollView: {
        flex: 1,
        padding: 20,
        backgroundColor: COLORS.white,
    },
    body: {
        paddingHorizontal: 15,
        paddingBottom: 20, 
    },
    sectionTitle: {
        fontSize: 15,
        fontWeight: 'bold',
        color: COLORS.text,
        marginTop: 20,
        marginBottom: 15,
    },
    infoBlock: {
        // ...
    },
    row: {
        flexDirection: 'row',
        paddingVertical: 10,
        // borderBottomWidth: 1,
        borderBottomColor: COLORS.background,
        alignItems: 'center',
    },
    label: {
        // Gi·ªØ c·ªë ƒë·ªãnh chi·ªÅu r·ªông cho c·ªôt Label
        width: width * 0.35,
        fontSize: 14,
        color: COLORS.label,
    },
    value: {
        // Chi·∫øm ph·∫ßn c√≤n l·∫°i
        flex: 1,
        fontSize: 14,
        color: COLORS.text,
        fontWeight: '500',
    },
    divider: {
        height: 10,
        backgroundColor: COLORS.lightGray,
        marginHorizontal: -15, // K√©o d·∫£i ph√¢n c√°ch ra s√°t l·ªÅ
        marginTop: 10,
    },
    logoContainer: {
        borderWidth: 1,
        borderColor: COLORS.border,
        padding: 20,
        minHeight: 80,
        minWidth: 100,
        justifyContent: 'center',
        alignItems: 'center',
    },
    logoStatus: {
        color: COLORS.label,
        fontSize: 12,
    }
});

export default CompanyProfileFull;